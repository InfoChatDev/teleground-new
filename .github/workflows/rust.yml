# This workflow will build a Rust project using GitHub Actions
# It runs on every push and pull request to main branches

name: Rust CI

on:
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      # 新增：编译前留言
      - name: Comment "start compiling" on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const messages = [
              // 简体中文
              "我已开始编译。马上就编译好了。",
              // English
              "Compilation started. It will be ready soon.",
              // Русский
              "Я начал компиляцию. Скоро всё будет готово.",
              // Français
              "La compilation a commencé. Ce sera prêt bientôt.",
              // Deutsch
              "Die Kompilierung wurde gestartet. Es ist bald fertig.",
              // 日本語
              "コンパイルを開始しました。まもなく完了します。",
              // Español
              "La compilación ha comenzado. Estará lista pronto.",
              // 其它语言折叠
              `<details>
<summary>Other languages</summary>

- Italiano: La compilazione è iniziata. Sarà pronta a breve.
- Português: A compilação começou. Estará pronta em breve.
- 한국어: 컴파일을 시작했습니다. 곧 준비됩니다.
- Türkçe: Derleme başladı. Yakında hazır olacak.
- العربية: بدأت عملية التجميع. ستكون جاهزة قريبًا.
- हिन्दी: संकलन शुरू हो गया है। यह जल्द ही तैयार हो जाएगा।
- Bahasa Indonesia: Kompilasi telah dimulai. Akan segera siap.
- ภาษาไทย: เริ่มการคอมไพล์แล้ว จะเสร็จในไม่ช้า
- Tiếng Việt: Đã bắt đầu biên dịch. Sẽ sớm hoàn thành.
- Nederlands: Compilatie gestart. Het is binnenkort klaar.
- Polski: Kompilacja rozpoczęta. Wkrótce będzie gotowa.
- Čeština: Kompilace byla zahájena. Brzy bude hotová.
- Magyar: A fordítás elkezdődött. Hamarosan kész lesz.
- Ελληνικά: Η μεταγλώττιση ξεκίνησε. Θα είναι έτοιμη σύντομα.
- Svenska: Kompileringen har startat. Den är snart klar.
- Suomi: Kääntäminen on alkanut. Se valmistuu pian.
- Dansk: Kompileringen er startet. Den er snart klar.
- Norsk: Kompileringen har startet. Den er snart klar.
- Română: Compilarea a început. Va fi gata în curând.
- Български: Компилацията започна. Скоро ще бъде готова.
- Українська: Компіляція розпочата. Незабаром буде готова.
- עברית: ההידור התחיל. זה יהיה מוכן בקרוב.
- فارسی: کامپایل شروع شد. به زودی آماده می‌شود.
- Bahasa Melayu: Kompilasi telah bermula. Ia akan siap tidak lama lagi.
</details>`
            ];
            const body = messages.slice(0,7).join('\n\n') + '\n\n' + messages[7];
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build
        run: cargo build --release --verbose
      - name: Upload compiled binary
        uses: actions/upload-artifact@v4
        with:
          name: compiled-${{ matrix.os }}
          path: |
            target/release/*
  comment-artifacts:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: List artifact download links
        id: artifact_links
        run: |
          echo "ARTIFACTS<<EOF" >> $GITHUB_ENV
          echo "### :package: This is compiled file" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "- [Linux (ubuntu-latest)](https://github.com/${{ github.repository }}/suites/${{ github.run_id }}/artifacts?name=compiled-ubuntu-latest)" >> $GITHUB_ENV
          echo "- [Windows (windows-latest)](https://github.com/${{ github.repository }}/suites/${{ github.run_id }}/artifacts?name=compiled-windows-latest)" >> $GITHUB_ENV
          echo "- [macOS (macos-latest)](https://github.com/${{ github.repository }}/suites/${{ github.run_id }}/artifacts?name=compiled-macos-latest)" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Post artifact links to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = process.env.ARTIFACTS;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })
